generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AccessRole {
  USER
  ADMIN
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String     @unique
  image         String?
  display_name  String?    @db.VarChar
  password_hash String?    @db.Text
  access_role   AccessRole @default(USER)

  @@unique([id, email])
  @@map(name: "users")
}

model Material {
  id                   String  @id @default(cuid())
  name                 String
  grade                String
  description          String?
  chemical_composition Json?

  inventoryItems     InventoryItem[]
  necessaryMaterials NecessaryMaterial[]
  orders             Order[]

  @@map(name: "material")
}

enum InventoryStatus {
  available
  reserved
  used
  scrap
}

model InventoryItem {
  id          String   @id @default(cuid())
  material    Material @relation(fields: [material_id], references: [id])
  material_id String

  coil_number   String?
  thickness     Float
  width         Float
  weight        Float
  location      String
  supplier      String
  date_received DateTime
  status        InventoryStatus
  comment       String?

  @@map(name: "inventory_item")
}

enum UrgencyLevel {
  low
  medium
  high
}

model NecessaryMaterial {
  id          String   @id @default(cuid())
  material    Material @relation(fields: [material_id], references: [id])
  material_id String

  required_thickness Float
  required_width     Float
  required_weight    Float
  urgency            UrgencyLevel
  due_date           DateTime
  comment            String?

  @@map(name: "necessary_material")
}

enum OrderStatus {
  PENDING
  CONFIRMED
  IN_PRODUCTION
  SHIPPED
  DELIVERED
  CANCELLED
}

enum PaymentStatus {
  UNPAID
  PARTIALLY_PAID
  PAID
  REFUNDED
  OVERDUE
}

model Order {
  id                String        @id @default(cuid())
  material          Material      @relation(fields: [material_id], references: [id])
  material_id       String
  order_number      String        @unique
  unit_price        Float
  quantity          Float
  total_price       Float
  status            OrderStatus   @default(PENDING)
  supplier          String
  expected_delivery DateTime?
  actual_delivery   DateTime?
  payment_status    PaymentStatus @default(UNPAID)
  payment_due_date  DateTime?
  shipping_address  String
  contact_person    String?
  contact_phone     String?
  contact_email     String?
  notes             String?
  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt

  @@map(name: "orders")
}

model IncomingEmail {
  id         String      @id @default(cuid())
  subject    String
  sender     String
  body       String
  receivedAt DateTime    @default(now())
  status     EmailStatus @default(UNREADED)
  response   String?

  @@map(name: "incoming_emails")
}

enum EmailStatus {
  UNREADED
  READED
  PROCESSED
}
